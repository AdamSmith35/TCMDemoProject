{"ast":null,"code":"var _jsxFileName = \"/home/adam/TCMDemoProject/src/App.js\";\nimport React, { Component } from 'react'; //import ReactDOM from 'react-dom/client';\n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Retrieve = async () => {\n      const res = await fetch('/Retrieve');\n      const file = await res.json();\n      this.state.serverDate = file.serverDate;\n      this.state.serverUpTime = file.serverUpTime;\n      this.state.serverUpTimeInstance = file.serverUpTimeInstance;\n      this.state.serverTotalMemory = file.serverTotalMemory;\n      this.state.serverUsedMemory = file.serverUsedMemory;\n      this.state.ServerCPUUsage = file.serverCPUUsage;\n      this.setState({\n        state: this.State\n      });\n      return file;\n    };\n\n    this.state = {\n      serverDate: \"empty\",\n      serverUpTime: \"empty\",\n      serverUpTimeInstance: \"empty\",\n      serverTotalMemory: \"empty\",\n      serverUsedMemory: \"empty\",\n      serverCPUUsage: \"empty\"\n    };\n  }\n\n  componentDidMount() {\n    //this.Connect();\n    this.Retrieve();\n  }\n\n  componentWillUnmount() {// do stuff\n  }\n  /*\n  Connect = async () => {\n      const res = await fetch ('/Connect');\n      const file = await res.json();\n       if (res.status !== 200){\n          throw Error(file.message);\n      }\n       return file;\n  }\n  */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-intro\",\n        children: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Date\",\n        children: this.state.serverDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"UpTime\",\n        children: this.state.serverUpTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"UpTimeInstance\",\n        children: this.state.serverUpTimeInstance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TotalMemory\",\n        children: this.state.serverTotalMemory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"UsedMemory\",\n        children: this.state.serverUsedMemory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"CPUUsage\",\n        children: this.state.serverCPUUsage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","App","constructor","props","Retrieve","res","fetch","file","json","state","serverDate","serverUpTime","serverUpTimeInstance","serverTotalMemory","serverUsedMemory","ServerCPUUsage","serverCPUUsage","setState","State","componentDidMount","componentWillUnmount","render","data"],"sources":["/home/adam/TCMDemoProject/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\n//import ReactDOM from 'react-dom/client';\nimport './App.css';\n\nclass App extends React.Component\n{\n    constructor(props){\n        super(props);\n        this.state = {  serverDate: \"empty\", \n                        serverUpTime: \"empty\", \n                        serverUpTimeInstance: \"empty\",\n                        serverTotalMemory: \"empty\",\n                        serverUsedMemory: \"empty\",\n                        serverCPUUsage: \"empty\"\n                    };\n    }\n\n    componentDidMount(){\n        //this.Connect();\n        this.Retrieve();\n    }\n\n    componentWillUnmount(){\n        // do stuff\n    }\n\n    /*\n    Connect = async () => {\n        const res = await fetch ('/Connect');\n        const file = await res.json();\n\n        if (res.status !== 200){\n            throw Error(file.message);\n        }\n\n        return file;\n    }\n    */\n\n    Retrieve = async () => {\n        const res = await fetch ('/Retrieve');\n        const file = await res.json();\n\n        this.state.serverDate = file.serverDate;\n        this.state.serverUpTime = file.serverUpTime;\n        this.state.serverUpTimeInstance = file.serverUpTimeInstance;\n        this.state.serverTotalMemory = file.serverTotalMemory;\n        this.state.serverUsedMemory = file.serverUsedMemory;\n        this.state.ServerCPUUsage = file.serverCPUUsage;\n\n        this.setState({state: this.State});\n        \n        return file;\n    }\n\n    render (){\n        return(\n            <div className=\"App\">\n                <p className=\"App-intro\">{this.state.data}</p>\n                <p className=\"Date\">{this.state.serverDate}</p>\n                <p className=\"UpTime\">{this.state.serverUpTime}</p>\n                <p className=\"UpTimeInstance\">{this.state.serverUpTimeInstance}</p>\n                <p className=\"TotalMemory\">{this.state.serverTotalMemory}</p>\n                <p className=\"UsedMemory\">{this.state.serverUsedMemory}</p>\n                <p className=\"CPUUsage\">{this.state.serverCPUUsage}</p>\n            </div>\n        );\n    }\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACC,SAAxB,CACA;EACIE,WAAW,CAACC,KAAD,EAAO;IACd,MAAMA,KAAN;;IADc,KAiClBC,QAjCkB,GAiCP,YAAY;MACnB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,WAAF,CAAvB;MACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;MAEA,KAAKC,KAAL,CAAWC,UAAX,GAAwBH,IAAI,CAACG,UAA7B;MACA,KAAKD,KAAL,CAAWE,YAAX,GAA0BJ,IAAI,CAACI,YAA/B;MACA,KAAKF,KAAL,CAAWG,oBAAX,GAAkCL,IAAI,CAACK,oBAAvC;MACA,KAAKH,KAAL,CAAWI,iBAAX,GAA+BN,IAAI,CAACM,iBAApC;MACA,KAAKJ,KAAL,CAAWK,gBAAX,GAA8BP,IAAI,CAACO,gBAAnC;MACA,KAAKL,KAAL,CAAWM,cAAX,GAA4BR,IAAI,CAACS,cAAjC;MAEA,KAAKC,QAAL,CAAc;QAACR,KAAK,EAAE,KAAKS;MAAb,CAAd;MAEA,OAAOX,IAAP;IACH,CA/CiB;;IAEd,KAAKE,KAAL,GAAa;MAAGC,UAAU,EAAE,OAAf;MACGC,YAAY,EAAE,OADjB;MAEGC,oBAAoB,EAAE,OAFzB;MAGGC,iBAAiB,EAAE,OAHtB;MAIGC,gBAAgB,EAAE,OAJrB;MAKGE,cAAc,EAAE;IALnB,CAAb;EAOH;;EAEDG,iBAAiB,GAAE;IACf;IACA,KAAKf,QAAL;EACH;;EAEDgB,oBAAoB,GAAE,CAClB;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAoBIC,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC,KAAf;MAAA,wBACI;QAAG,SAAS,EAAC,WAAb;QAAA,UAA0B,KAAKZ,KAAL,CAAWa;MAArC;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAG,SAAS,EAAC,MAAb;QAAA,UAAqB,KAAKb,KAAL,CAAWC;MAAhC;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAG,SAAS,EAAC,QAAb;QAAA,UAAuB,KAAKD,KAAL,CAAWE;MAAlC;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAG,SAAS,EAAC,gBAAb;QAAA,UAA+B,KAAKF,KAAL,CAAWG;MAA1C;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI;QAAG,SAAS,EAAC,aAAb;QAAA,UAA4B,KAAKH,KAAL,CAAWI;MAAvC;QAAA;QAAA;QAAA;MAAA,QALJ,eAMI;QAAG,SAAS,EAAC,YAAb;QAAA,UAA2B,KAAKJ,KAAL,CAAWK;MAAtC;QAAA;QAAA;QAAA;MAAA,QANJ,eAOI;QAAG,SAAS,EAAC,UAAb;QAAA,UAAyB,KAAKL,KAAL,CAAWO;MAApC;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH;;AA9DL;;AAiEA,eAAef,GAAf"},"metadata":{},"sourceType":"module"}