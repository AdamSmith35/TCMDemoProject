{"ast":null,"code":"var _jsxFileName = \"/home/adam/TCMDemoProject/src/App.js\";\nimport { toHaveAccessibleDescription } from '@testing-library/jest-dom/dist/matchers';\nimport React, { Component } from 'react'; //import ReactDOM from 'react-dom/client';\n\nimport './App.css';\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { LineChart, BarChart, Line, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Retrieve = async () => {\n      const res = await fetch('/Retrieve');\n      const file = await res.json();\n      file.databaseReturnTable.forEach(item => {\n        let temp = item.id;\n        item.id = item._id;\n        item._id = temp;\n      });\n      this.state.serverDate = file.serverDate;\n      this.state.serverUpTime = file.serverUpTime;\n      this.state.serverUpTimeInstance = file.serverUpTimeInstance;\n      this.state.serverTotalMemory = file.serverTotalMemory;\n      this.state.serverUsedMemory = file.serverUsedMemory;\n      this.state.serverCPUUsage = file.serverCPUUsage;\n      this.state.databaseReturnTable = file.databaseReturnTable;\n      this.setState({\n        state: this.State\n      });\n      return file;\n    };\n\n    this.state = {\n      serverDate: \"empty\",\n      serverUpTime: \"empty\",\n      serverUpTimeInstance: \"empty\",\n      serverTotalMemory: \"empty\",\n      serverUsedMemory: \"empty\",\n      serverCPUUsage: \"empty\",\n      databaseReturnTable: []\n    };\n  }\n\n  componentDidMount() {\n    //this.Connect();\n    this.Retrieve();\n  }\n\n  componentWillUnmount() {// do stuff\n  }\n  /*\n  Connect = async () => {\n      const res = await fetch ('/Connect');\n      const file = await res.json();\n       if (res.status !== 200){\n          throw Error(file.message);\n      }\n       return file;\n  }\n  */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-intro\",\n        children: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TitleHeader\",\n        children: \"Most Recent Entry:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Date\",\n        children: this.state.serverDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"UpTime\",\n        children: this.state.serverUpTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"UpTimeInstance\",\n        children: this.state.serverUpTimeInstance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TotalMemory\",\n        children: this.state.serverTotalMemory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"UsedMemory\",\n        children: this.state.serverUsedMemory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"CPUUsage\",\n        children: this.state.serverCPUUsage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 500,\n        height: 200,\n        data: this.state.databaseReturnTable,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"serverDate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"serverUpTime.timeTicks\",\n          stroke: \"#8884d8\",\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"serverUpTimeInstance.timeTicks\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 500,\n        height: 200,\n        data: this.state.databaseReturnTable,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"serverDate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"serverTotalMemory\",\n          stroke: \"#8884d8\",\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"serverUsedMemory\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 500,\n        height: 300,\n        data: this.state.databaseReturnTable,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"serverDate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"serverCPUUsage\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), \"//\", /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"serverMemoryUsage\",\n          fill: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"UpTime\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"UpTime Instance\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Total Memory\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Used Memory\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"CPU Usage\\xA0(%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: this.state.databaseReturnTable.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.serverDate != undefined ? row.serverDate.toString() : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.serverUpTime != undefined ? row.serverUpTime.timeTicks.toString() : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.serverUpTimeInstance != undefined ? row.serverUpTimeInstance.timeTicks.toString() : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.serverTotalMemory != undefined ? row.serverTotalMemory.toString() : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.serverUsedMemory != undefined ? row.serverUsedMemory.toString() : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.serverCPUUsage != undefined ? row.serverCPUUsage.toString() : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n  ErrorCatch(val) {\n    return val != undefined ? val.toString() : \"\";\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["toHaveAccessibleDescription","React","Component","StyledEngineProvider","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","LineChart","BarChart","Line","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","App","constructor","props","Retrieve","res","fetch","file","json","databaseReturnTable","forEach","item","temp","id","_id","state","serverDate","serverUpTime","serverUpTimeInstance","serverTotalMemory","serverUsedMemory","serverCPUUsage","setState","State","componentDidMount","componentWillUnmount","render","data","top","right","left","bottom","r","minWidth","map","row","border","undefined","toString","timeTicks","ErrorCatch","val"],"sources":["/home/adam/TCMDemoProject/src/App.js"],"sourcesContent":["import { toHaveAccessibleDescription } from '@testing-library/jest-dom/dist/matchers';\nimport React, {Component} from 'react';\n//import ReactDOM from 'react-dom/client';\nimport './App.css';\n\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport {\n    LineChart,\n    BarChart,\n    Line,\n    Bar,\n    Cell,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend\n  } from \"recharts\";\n\n\n\nclass App extends React.Component\n{\n    constructor(props){\n        super(props);\n        this.state = {  serverDate: \"empty\", \n                        serverUpTime: \"empty\", \n                        serverUpTimeInstance: \"empty\",\n                        serverTotalMemory: \"empty\",\n                        serverUsedMemory: \"empty\",\n                        serverCPUUsage: \"empty\",\n                        databaseReturnTable: []\n                    };\n    }\n\n    componentDidMount(){\n        //this.Connect();\n        this.Retrieve();\n    }\n\n    componentWillUnmount(){\n        // do stuff\n    }\n\n    /*\n    Connect = async () => {\n        const res = await fetch ('/Connect');\n        const file = await res.json();\n\n        if (res.status !== 200){\n            throw Error(file.message);\n        }\n\n        return file;\n    }\n    */\n\n    Retrieve = async () => {\n        const res = await fetch ('/Retrieve');\n        const file = await res.json();\n\n        file.databaseReturnTable.forEach(item => {let temp = item.id; item.id = item._id; item._id = temp;})\n\n        this.state.serverDate = file.serverDate;\n        this.state.serverUpTime = file.serverUpTime;\n        this.state.serverUpTimeInstance = file.serverUpTimeInstance;\n        this.state.serverTotalMemory = file.serverTotalMemory;\n        this.state.serverUsedMemory = file.serverUsedMemory;\n        this.state.serverCPUUsage = file.serverCPUUsage;\n        this.state.databaseReturnTable = file.databaseReturnTable;\n\n        this.setState({state: this.State});\n        \n        return file;\n    }\n\n    render (){\n        return(\n            <div className=\"App\">\n                <p className=\"App-intro\">{this.state.data}</p>\n                <p className=\"TitleHeader\">{\"Most Recent Entry:\"}</p>\n                <p className=\"Date\">{this.state.serverDate}</p>\n                <p className=\"UpTime\">{this.state.serverUpTime}</p>\n                <p className=\"UpTimeInstance\">{this.state.serverUpTimeInstance}</p>\n                <p className=\"TotalMemory\">{this.state.serverTotalMemory}</p>\n                <p className=\"UsedMemory\">{this.state.serverUsedMemory}</p>\n                <p className=\"CPUUsage\">{this.state.serverCPUUsage}</p>\n\n                <LineChart\n                    width={500}\n                    height={200}\n                    data={this.state.databaseReturnTable}\n                    margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"serverDate\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Line\n                        type=\"monotone\"\n                        dataKey=\"serverUpTime.timeTicks\"\n                        stroke=\"#8884d8\"\n                        activeDot={{ r: 8 }}\n                    />\n                    <Line type=\"monotone\" dataKey=\"serverUpTimeInstance.timeTicks\" stroke=\"#82ca9d\" />\n                </LineChart>\n\n                <LineChart\n                    width={500}\n                    height={200}\n                    data={this.state.databaseReturnTable}\n                    margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"serverDate\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Line\n                        type=\"monotone\"\n                        dataKey=\"serverTotalMemory\"\n                        stroke=\"#8884d8\"\n                        activeDot={{ r: 8 }}\n                    />\n                    <Line type=\"monotone\" dataKey=\"serverUsedMemory\" stroke=\"#82ca9d\" />\n                </LineChart>\n\n                <BarChart\n                    width={500}\n                    height={300}\n                    data={this.state.databaseReturnTable}\n                    margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"serverDate\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"serverCPUUsage\" fill=\"#8884d8\" />\n                    //<Bar dataKey=\"serverMemoryUsage\" fill=\"#82ca9d\" />\n                </BarChart>\n\n                <TableContainer component={Paper}>\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>ID</TableCell>\n                                <TableCell align=\"right\">Date</TableCell>\n                                <TableCell align=\"right\">UpTime&nbsp;</TableCell>\n                                <TableCell align=\"right\">UpTime Instance&nbsp;</TableCell>\n                                <TableCell align=\"right\">Total Memory&nbsp;</TableCell>\n                                <TableCell align=\"right\">Used Memory&nbsp;</TableCell>\n                                <TableCell align=\"right\">CPU Usage&nbsp;(%)</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.databaseReturnTable.map((row) => (\n                                <TableRow\n                                    key={row.id}\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.id}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{row.serverDate != undefined\n                                        ? row.serverDate.toString() : \"\"}</TableCell>\n                                    <TableCell align=\"right\">{row.serverUpTime != undefined\n                                        ? row.serverUpTime.timeTicks.toString() : \"\"}</TableCell>\n                                    <TableCell align=\"right\">{row.serverUpTimeInstance != undefined\n                                        ? row.serverUpTimeInstance.timeTicks.toString() : \"\"}</TableCell>\n                                    <TableCell align=\"right\">{row.serverTotalMemory != undefined\n                                        ? row.serverTotalMemory.toString() : \"\"}</TableCell>\n                                    <TableCell align=\"right\">{row.serverUsedMemory != undefined\n                                        ? row.serverUsedMemory.toString() : \"\"}</TableCell>\n                                    <TableCell align=\"right\">{row.serverCPUUsage != undefined\n                                        ? row.serverCPUUsage.toString() : \"\"}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        );\n    }\n\n    ErrorCatch(val){\n        return val != undefined ? val.toString() : \"\"\n    }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}